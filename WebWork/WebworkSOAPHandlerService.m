/*
	WebworkSOAPHandlerService.m
	The implementation classes and methods for the WebworkSOAPHandlerService web service.
	Generated by SudzC.com
*/

#import "WebworkSOAPHandlerService.h"
				
#import "Soap.h"
	
#import "ArrayOfString.h"
#import "ArrayOfWebworkSOAPClassesKey.h"
#import "ArrayOfWebworkSOAPClassesUserSet.h"
#import "ArrayOfWebworkSOAPClassesUserProblem.h"
#import "ArrayOfWebworkSOAPClassesGlobalSet.h"
#import "ArrayOfWebworkSOAPClassesPassword.h"
#import "ArrayOfWebworkSOAPClassesUser.h"
#import "ArrayOfWebworkSOAPClassesGlobalProblem.h"
#import "ArrayOfWebworkSOAPClassesPermission.h"
#import "WebworkSOAPClassesUserProblem.h"
#import "WebworkSOAPClassesGlobalSet.h"
#import "WebworkSOAPClassesUserSet.h"
#import "WebworkSOAPClassesPassword.h"
#import "WebworkSOAPClassesPermission.h"
#import "WebworkSOAPClassesKey.h"
#import "WebworkSOAPClassesGlobalProblem.h"
#import "WebworkSOAPClassesUser.h"

/* Implementation of the service */
				
@implementation WebworkSOAPHandlerService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"https://webwork.math.missouri.edu/webwork2_rpc";
			self.namespace = @"https://webwork.math.missouri.edu/WebworkSOAP";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (WebworkSOAPHandlerService*) service {
		return [WebworkSOAPHandlerService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (WebworkSOAPHandlerService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[WebworkSOAPHandlerService alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns NSString*.  */
	- (SoapRequest*) hello: (id <SoapDelegate>) handler
	{
		return [self hello: handler action: nil];
	}

	- (SoapRequest*) hello: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"hello" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_courses: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey
	{
		return [self list_courses: handler action: nil authenKey: authenKey];
	}

	- (SoapRequest*) list_courses: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_courses" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SoapArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) login_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self login_user: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) login_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"login_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) assign_set_to_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
	{
		return [self assign_set_to_user: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID];
	}

	- (SoapRequest*) assign_set_to_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"assign_set_to_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) grade_users_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs setID: (NSString*) setID
	{
		return [self grade_users_sets: handler action: nil authenKey: authenKey courseName: courseName userIDs: userIDs setID: setID];
	}

	- (SoapRequest*) grade_users_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userIDs forName: @"userIDs"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"grade_users_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesGlobalSet*.  */
	- (SoapRequest*) get_set_data: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
	{
		return [self get_set_data: handler action: nil authenKey: authenKey courseName: courseName setID: setID];
	}

	- (SoapRequest*) get_set_data: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_set_data" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesGlobalSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_password: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPassword*) record
	{
		return [self add_password: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_password: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPassword*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_password: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPassword*) record
	{
		return [self put_password: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_password: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPassword*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_password: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self list_password: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) list_password: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesPassword*.  */
	- (SoapRequest*) get_passwords: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
	{
		return [self get_passwords: handler action: nil authenKey: authenKey courseName: courseName userIDs: userIDs];
	}

	- (SoapRequest*) get_passwords: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userIDs forName: @"userIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_passwords" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesPassword alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesPassword*.  */
	- (SoapRequest*) get_password: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self get_password: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) get_password: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesPassword alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_permission: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPermission*) record
	{
		return [self add_permission: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_permission: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPermission*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_permission" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_permission: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPermission*) record
	{
		return [self put_permission: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_permission: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesPermission*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_permission" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_permissions: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self list_permissions: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) list_permissions: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_permissions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesPermission*.  */
	- (SoapRequest*) get_permissions: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
	{
		return [self get_permissions: handler action: nil authenKey: authenKey courseName: courseName userIDs: userIDs];
	}

	- (SoapRequest*) get_permissions: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userIDs forName: @"userIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_permissions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesPermission alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesPermission*.  */
	- (SoapRequest*) get_permission: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self get_permission: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) get_permission: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_permission" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesPermission alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_key: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesKey*) record
	{
		return [self add_key: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_key: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesKey*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_key" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_key: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesKey*) record
	{
		return [self put_key: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_key: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesKey*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_key" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_keys: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self list_keys: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) list_keys: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_keys" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesKey*.  */
	- (SoapRequest*) get_keys: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
	{
		return [self get_keys: handler action: nil authenKey: authenKey courseName: courseName userIDs: userIDs];
	}

	- (SoapRequest*) get_keys: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userIDs forName: @"userIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_keys" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesKey alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesKey*.  */
	- (SoapRequest*) get_key: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self get_key: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) get_key: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_key" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesKey alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUser*) record
	{
		return [self add_user: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUser*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUser*) record
	{
		return [self put_user: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUser*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_users: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self list_users: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) list_users: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesUser*.  */
	- (SoapRequest*) get_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self get_user: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) get_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesUser alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesUser*.  */
	- (SoapRequest*) get_users: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
	{
		return [self get_users: handler action: nil authenKey: authenKey courseName: courseName userIDs: userIDs];
	}

	- (SoapRequest*) get_users: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userIDs: (ArrayOfString*) userIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userIDs forName: @"userIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesUser alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) delete_user: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self delete_user: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) delete_user: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"delete_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_global_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalSet*) record
	{
		return [self add_global_set: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_global_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalSet*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_global_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_global_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalSet*) record
	{
		return [self put_global_set: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_global_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalSet*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_global_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_global_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self list_global_sets: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) list_global_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_global_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SoapArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesGlobalSet*.  */
	- (SoapRequest*) get_all_global_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self get_all_global_sets: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) get_all_global_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_all_global_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesGlobalSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesGlobalSet*.  */
	- (SoapRequest*) get_global_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setIDs: (ArrayOfString*) setIDs
	{
		return [self get_global_sets: handler action: nil authenKey: authenKey courseName: courseName setIDs: setIDs];
	}

	- (SoapRequest*) get_global_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setIDs: (ArrayOfString*) setIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setIDs forName: @"setIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_global_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesGlobalSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesGlobalSet*.  */
	- (SoapRequest*) get_global_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
	{
		return [self get_global_set: handler action: nil authenKey: authenKey courseName: courseName setID: setID];
	}

	- (SoapRequest*) get_global_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_global_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesGlobalSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) delete_global_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
	{
		return [self delete_global_set: handler action: nil authenKey: authenKey courseName: courseName setID: setID];
	}

	- (SoapRequest*) delete_global_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"delete_global_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_global_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalProblem*) record
	{
		return [self add_global_problem: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_global_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalProblem*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_global_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_global_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalProblem*) record
	{
		return [self put_global_problem: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_global_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesGlobalProblem*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_global_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_global_problems: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
	{
		return [self list_global_problems: handler action: nil authenKey: authenKey courseName: courseName setID: setID];
	}

	- (SoapRequest*) list_global_problems: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_global_problems" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesGlobalProblem*.  */
	- (SoapRequest*) get_all_global_problems: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
	{
		return [self get_all_global_problems: handler action: nil authenKey: authenKey courseName: courseName setID: setID];
	}

	- (SoapRequest*) get_all_global_problems: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_all_global_problems" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesGlobalProblem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesGlobalProblem*.  */
	- (SoapRequest*) get_global_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID problemID: (NSString*) problemID
	{
		return [self get_global_problem: handler action: nil authenKey: authenKey courseName: courseName setID: setID problemID: problemID];
	}

	- (SoapRequest*) get_global_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID problemID: (NSString*) problemID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: problemID forName: @"problemID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_global_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesGlobalProblem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) delete_global_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID problemID: (NSString*) problemID
	{
		return [self delete_global_problem: handler action: nil authenKey: authenKey courseName: courseName setID: setID problemID: problemID];
	}

	- (SoapRequest*) delete_global_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName setID: (NSString*) setID problemID: (NSString*) problemID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: problemID forName: @"problemID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"delete_global_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_user_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserProblem*) record
	{
		return [self add_user_problem: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_user_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserProblem*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_user_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_user_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserProblem*) record
	{
		return [self put_user_problem: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_user_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserProblem*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_user_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_user_problems: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
	{
		return [self list_user_problems: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID];
	}

	- (SoapRequest*) list_user_problems: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_user_problems" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesUserProblem*.  */
	- (SoapRequest*) get_all_user_problems: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
	{
		return [self get_all_user_problems: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID];
	}

	- (SoapRequest*) get_all_user_problems: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_all_user_problems" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesUserProblem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesUserProblem*.  */
	- (SoapRequest*) get_user_problems: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userProblemIDs: (ArrayOfString*) userProblemIDs
	{
		return [self get_user_problems: handler action: nil authenKey: authenKey courseName: courseName userProblemIDs: userProblemIDs];
	}

	- (SoapRequest*) get_user_problems: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userProblemIDs: (ArrayOfString*) userProblemIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userProblemIDs forName: @"userProblemIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_user_problems" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesUserProblem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesUserProblem*.  */
	- (SoapRequest*) get_user_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID problemID: (NSString*) problemID
	{
		return [self get_user_problem: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID problemID: problemID];
	}

	- (SoapRequest*) get_user_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID problemID: (NSString*) problemID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: problemID forName: @"problemID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_user_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesUserProblem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) delete_user_problem: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID problemID: (NSString*) problemID
	{
		return [self delete_user_problem: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID problemID: problemID];
	}

	- (SoapRequest*) delete_user_problem: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID problemID: (NSString*) problemID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: problemID forName: @"problemID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"delete_user_problem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) add_user_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserSet*) record
	{
		return [self add_user_set: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) add_user_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserSet*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"add_user_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) put_user_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserSet*) record
	{
		return [self put_user_set: handler action: nil authenKey: authenKey courseName: courseName record: record];
	}

	- (SoapRequest*) put_user_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName record: (WebworkSOAPClassesUserSet*) record
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: record forName: @"record"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"put_user_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfString*.  */
	- (SoapRequest*) list_user_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
	{
		return [self list_user_sets: handler action: nil authenKey: authenKey courseName: courseName userID: userID];
	}

	- (SoapRequest*) list_user_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"list_user_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfString alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesUserSet*.  */
	- (SoapRequest*) get_all_user_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName
	{
		return [self get_all_user_sets: handler action: nil authenKey: authenKey courseName: courseName];
	}

	- (SoapRequest*) get_all_user_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_all_user_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesUserSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOfWebworkSOAPClassesUserSet*.  */
	- (SoapRequest*) get_user_sets: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userSetIDs: (NSString*) userSetIDs
	{
		return [self get_user_sets: handler action: nil authenKey: authenKey courseName: courseName userSetIDs: userSetIDs];
	}

	- (SoapRequest*) get_user_sets: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userSetIDs: (NSString*) userSetIDs
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userSetIDs forName: @"userSetIDs"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_user_sets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOfWebworkSOAPClassesUserSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns WebworkSOAPClassesUserSet*.  */
	- (SoapRequest*) get_user_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
	{
		return [self get_user_set: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID];
	}

	- (SoapRequest*) get_user_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"get_user_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[WebworkSOAPClassesUserSet alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) delete_user_set: (id <SoapDelegate>) handler authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
	{
		return [self delete_user_set: handler action: nil authenKey: authenKey courseName: courseName userID: userID setID: setID];
	}

	- (SoapRequest*) delete_user_set: (id) _target action: (SEL) _action authenKey: (NSString*) authenKey courseName: (NSString*) courseName userID: (NSString*) userID setID: (NSString*) setID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: authenKey forName: @"authenKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: courseName forName: @"courseName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: setID forName: @"setID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"delete_user_set" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}


@end
	